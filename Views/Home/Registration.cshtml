@using Microsoft.AspNetCore.Builder
@using Microsoft.Extensions.Options
@using EUCTask.Controllers
@using Microsoft.Extensions.Localization

@inject IOptions<RequestLocalizationOptions> LocOptions
@inject IStringLocalizer<HomeController> Localizer

@model EUCTask.Models.Registration

@{
    var CountryItems = new List<SelectListItem>();
    foreach (var country in ViewBag.Countries)
    {
        CountryItems.Add(new SelectListItem { Text = country.Name, Value = country.Code });
    }
}

<form id="registrationForm" asp-action="Registration">
    @if (ViewBag.Success == false)
    {
        <div class="text-center alert alert-warning" id="warning" style="display:block">
            @Localizer["Warning"]
        </div>
    }
    @if (ViewBag.Success == true)
    {
        <div class="text-center alert alert-success" id="success" style="display:block">
            @Localizer["Success"]
        </div>
    }
    <div class="col-md-12">
        <div class="col-md-6 center-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.FullName)
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BirthNumber)
                <div class="col-md-12">
                    @Html.EditorFor(model => model.BirthNumber, new { htmlAttributes = new { onchange = "ComputeBirthday(this.value)", @id = "birthNumber", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthNumber, "", new { @id = "noBirthNumberWarn", @class = "text-danger" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.BirthNumberNotSet, new { htmlAttributes = new { onclick = "OnBirthNumberCheckboxChange(this.checked)", @id = "birthNumberNotSetChecked", @class = "checkbox" } })
                    @Html.LabelFor(model => model.BirthNumberNotSet)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Birthday)
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @id = "birthday", @class = "form-control", @type = "date"} })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender)
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Gender, new[] {
                     new SelectListItem() {Text = Localizer["Male"], Value = "M"},
                     new SelectListItem() {Text = Localizer["Female"], Value = "F"}
                 }, Localizer["SelectTitle"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email)
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Nationality)
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Nationality, CountryItems, Localizer["SelectTitle"], new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.GdprAgreement, new { htmlAttributes = new { @class = "checkbox" } })
                @Html.LabelFor(model => model.GdprAgreement)
                <a href="gdpr.pdf" target="_blank">@Localizer["GDPRlink"]</a>
                <div class="col-md-12">
                    @Html.ValidationMessageFor(model => model.GdprAgreement, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-12" style="height:50px">
                <input type="submit" value="@Localizer["Send"]" class="btn btn-default btn-dark btn-center"/>
            </div>
        </div>
    </div>
</form>

<script src="~/js/functions.js"></script>
